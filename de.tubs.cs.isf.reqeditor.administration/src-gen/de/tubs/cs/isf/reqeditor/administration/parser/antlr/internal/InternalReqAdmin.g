/*
 * generated by Xtext 2.10.0
 */
grammar InternalReqAdmin;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package de.tubs.cs.isf.reqeditor.administration.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package de.tubs.cs.isf.reqeditor.administration.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import de.tubs.cs.isf.reqeditor.administration.services.ReqAdminGrammarAccess;

}

@parser::members {

 	private ReqAdminGrammarAccess grammarAccess;

    public InternalReqAdminParser(TokenStream input, ReqAdminGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "RequirementsModel";
   	}

   	@Override
   	protected ReqAdminGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleRequirementsModel
entryRuleRequirementsModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRequirementsModelRule()); }
	iv_ruleRequirementsModel=ruleRequirementsModel
	{ $current=$iv_ruleRequirementsModel.current; }
	EOF;

// Rule RequirementsModel
ruleRequirementsModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getRequirementsModelAccess().getRequirementsModelAction_0(),
					$current);
			}
		)
		otherlv_1='RequirementsModel'
		{
			newLeafNode(otherlv_1, grammarAccess.getRequirementsModelAccess().getRequirementsModelKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRequirementsModelAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRequirementsModelRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"de.tubs.cs.isf.reqeditor.administration.ReqAdmin.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3='author'
			{
				newLeafNode(otherlv_3, grammarAccess.getRequirementsModelAccess().getAuthorKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRequirementsModelAccess().getCreatorEStringParserRuleCall_3_1_0());
					}
					lv_creator_4_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRequirementsModelRule());
						}
						set(
							$current,
							"creator",
							lv_creator_4_0,
							"de.tubs.cs.isf.reqeditor.administration.ReqAdmin.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_5='version'
			{
				newLeafNode(otherlv_5, grammarAccess.getRequirementsModelAccess().getVersionKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRequirementsModelAccess().getVersionEStringParserRuleCall_4_1_0());
					}
					lv_version_6_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRequirementsModelRule());
						}
						set(
							$current,
							"version",
							lv_version_6_0,
							"de.tubs.cs.isf.reqeditor.administration.ReqAdmin.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_7='elements'
			{
				newLeafNode(otherlv_7, grammarAccess.getRequirementsModelAccess().getElementsKeyword_5_0());
			}
			otherlv_8='{'
			{
				newLeafNode(otherlv_8, grammarAccess.getRequirementsModelAccess().getLeftCurlyBracketKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRequirementsModelAccess().getElementsRequirementModelElementParserRuleCall_5_2_0());
					}
					lv_elements_9_0=ruleRequirementModelElement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRequirementsModelRule());
						}
						add(
							$current,
							"elements",
							lv_elements_9_0,
							"de.tubs.cs.isf.reqeditor.administration.ReqAdmin.RequirementModelElement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_10=','
				{
					newLeafNode(otherlv_10, grammarAccess.getRequirementsModelAccess().getCommaKeyword_5_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getRequirementsModelAccess().getElementsRequirementModelElementParserRuleCall_5_3_1_0());
						}
						lv_elements_11_0=ruleRequirementModelElement
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getRequirementsModelRule());
							}
							add(
								$current,
								"elements",
								lv_elements_11_0,
								"de.tubs.cs.isf.reqeditor.administration.ReqAdmin.RequirementModelElement");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_12='}'
			{
				newLeafNode(otherlv_12, grammarAccess.getRequirementsModelAccess().getRightCurlyBracketKeyword_5_4());
			}
		)?
		(
			otherlv_13='attributes'
			{
				newLeafNode(otherlv_13, grammarAccess.getRequirementsModelAccess().getAttributesKeyword_6_0());
			}
			otherlv_14='{'
			{
				newLeafNode(otherlv_14, grammarAccess.getRequirementsModelAccess().getLeftCurlyBracketKeyword_6_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRequirementsModelAccess().getAttributesAttributeParserRuleCall_6_2_0());
					}
					lv_attributes_15_0=ruleAttribute
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRequirementsModelRule());
						}
						add(
							$current,
							"attributes",
							lv_attributes_15_0,
							"de.tubs.cs.isf.reqeditor.administration.ReqAdmin.Attribute");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_16=','
				{
					newLeafNode(otherlv_16, grammarAccess.getRequirementsModelAccess().getCommaKeyword_6_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getRequirementsModelAccess().getAttributesAttributeParserRuleCall_6_3_1_0());
						}
						lv_attributes_17_0=ruleAttribute
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getRequirementsModelRule());
							}
							add(
								$current,
								"attributes",
								lv_attributes_17_0,
								"de.tubs.cs.isf.reqeditor.administration.ReqAdmin.Attribute");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_18='}'
			{
				newLeafNode(otherlv_18, grammarAccess.getRequirementsModelAccess().getRightCurlyBracketKeyword_6_4());
			}
		)?
	)
;

// Entry rule entryRuleRequirementModelElement
entryRuleRequirementModelElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRequirementModelElementRule()); }
	iv_ruleRequirementModelElement=ruleRequirementModelElement
	{ $current=$iv_ruleRequirementModelElement.current; }
	EOF;

// Rule RequirementModelElement
ruleRequirementModelElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='Create'
			{
				newLeafNode(otherlv_0, grammarAccess.getRequirementModelElementAccess().getCreateKeyword_0_0());
			}
			{
				newCompositeNode(grammarAccess.getRequirementModelElementAccess().getRequirementsGroupParserRuleCall_0_1());
			}
			this_RequirementsGroup_1=ruleRequirementsGroup
			{
				$current = $this_RequirementsGroup_1.current;
				afterParserOrEnumRuleCall();
			}
		)
		    |
		(
			otherlv_2='Create'
			{
				newLeafNode(otherlv_2, grammarAccess.getRequirementModelElementAccess().getCreateKeyword_1_0());
			}
			{
				newCompositeNode(grammarAccess.getRequirementModelElementAccess().getRequirementParserRuleCall_1_1());
			}
			this_Requirement_3=ruleRequirement
			{
				$current = $this_Requirement_3.current;
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleAttribute
entryRuleAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttributeRule()); }
	iv_ruleAttribute=ruleAttribute
	{ $current=$iv_ruleAttribute.current; }
	EOF;

// Rule Attribute
ruleAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getAttributeAccess().getAttributeAction_0(),
					$current);
			}
		)
		otherlv_1='Attribute'
		{
			newLeafNode(otherlv_1, grammarAccess.getAttributeAccess().getAttributeKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAttributeAccess().getIdEStringParserRuleCall_2_0());
				}
				lv_id_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAttributeRule());
					}
					set(
						$current,
						"id",
						lv_id_2_0,
						"de.tubs.cs.isf.reqeditor.administration.ReqAdmin.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleConstraint
entryRuleConstraint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstraintRule()); }
	iv_ruleConstraint=ruleConstraint
	{ $current=$iv_ruleConstraint.current; }
	EOF;

// Rule Constraint
ruleConstraint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getConstraintAccess().getConstraintAction_0(),
					$current);
			}
		)
		otherlv_1='Constraint'
		{
			newLeafNode(otherlv_1, grammarAccess.getConstraintAccess().getConstraintKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConstraintAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConstraintRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"de.tubs.cs.isf.reqeditor.administration.ReqAdmin.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='with'
		{
			newLeafNode(otherlv_3, grammarAccess.getConstraintAccess().getWithKeyword_3());
		}
		(
			otherlv_4='expression'
			{
				newLeafNode(otherlv_4, grammarAccess.getConstraintAccess().getExpressionKeyword_4_0());
			}
			otherlv_5='{'
			{
				newLeafNode(otherlv_5, grammarAccess.getConstraintAccess().getLeftCurlyBracketKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConstraintAccess().getExpressionExpressionParserRuleCall_4_2_0());
					}
					lv_expression_6_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConstraintRule());
						}
						add(
							$current,
							"expression",
							lv_expression_6_0,
							"de.tubs.cs.isf.reqeditor.administration.ReqAdmin.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_7=','
				{
					newLeafNode(otherlv_7, grammarAccess.getConstraintAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getConstraintAccess().getExpressionExpressionParserRuleCall_4_3_1_0());
						}
						lv_expression_8_0=ruleExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getConstraintRule());
							}
							add(
								$current,
								"expression",
								lv_expression_8_0,
								"de.tubs.cs.isf.reqeditor.administration.ReqAdmin.Expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_9='}'
			{
				newLeafNode(otherlv_9, grammarAccess.getConstraintAccess().getRightCurlyBracketKeyword_4_4());
			}
		)?
	)
;

// Entry rule entryRuleRequirementsGroup
entryRuleRequirementsGroup returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRequirementsGroupRule()); }
	iv_ruleRequirementsGroup=ruleRequirementsGroup
	{ $current=$iv_ruleRequirementsGroup.current; }
	EOF;

// Rule RequirementsGroup
ruleRequirementsGroup returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getRequirementsGroupAccess().getRequirementsGroupAction_0(),
					$current);
			}
		)
		otherlv_1='RequirementsGroup'
		{
			newLeafNode(otherlv_1, grammarAccess.getRequirementsGroupAccess().getRequirementsGroupKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRequirementsGroupAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRequirementsGroupRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"de.tubs.cs.isf.reqeditor.administration.ReqAdmin.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='with'
		{
			newLeafNode(otherlv_3, grammarAccess.getRequirementsGroupAccess().getWithKeyword_3());
		}
		(
			otherlv_4='id'
			{
				newLeafNode(otherlv_4, grammarAccess.getRequirementsGroupAccess().getIdKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRequirementsGroupAccess().getIdEStringParserRuleCall_4_1_0());
					}
					lv_id_5_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRequirementsGroupRule());
						}
						set(
							$current,
							"id",
							lv_id_5_0,
							"de.tubs.cs.isf.reqeditor.administration.ReqAdmin.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_6='description:'
			{
				newLeafNode(otherlv_6, grammarAccess.getRequirementsGroupAccess().getDescriptionKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRequirementsGroupAccess().getDescriptionEStringParserRuleCall_5_1_0());
					}
					lv_description_7_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRequirementsGroupRule());
						}
						set(
							$current,
							"description",
							lv_description_7_0,
							"de.tubs.cs.isf.reqeditor.administration.ReqAdmin.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_8='constraints'
			{
				newLeafNode(otherlv_8, grammarAccess.getRequirementsGroupAccess().getConstraintsKeyword_6_0());
			}
			otherlv_9='{'
			{
				newLeafNode(otherlv_9, grammarAccess.getRequirementsGroupAccess().getLeftCurlyBracketKeyword_6_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRequirementsGroupAccess().getConstraintsConstraintParserRuleCall_6_2_0());
					}
					lv_constraints_10_0=ruleConstraint
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRequirementsGroupRule());
						}
						add(
							$current,
							"constraints",
							lv_constraints_10_0,
							"de.tubs.cs.isf.reqeditor.administration.ReqAdmin.Constraint");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_11=','
				{
					newLeafNode(otherlv_11, grammarAccess.getRequirementsGroupAccess().getCommaKeyword_6_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getRequirementsGroupAccess().getConstraintsConstraintParserRuleCall_6_3_1_0());
						}
						lv_constraints_12_0=ruleConstraint
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getRequirementsGroupRule());
							}
							add(
								$current,
								"constraints",
								lv_constraints_12_0,
								"de.tubs.cs.isf.reqeditor.administration.ReqAdmin.Constraint");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_13='}'
			{
				newLeafNode(otherlv_13, grammarAccess.getRequirementsGroupAccess().getRightCurlyBracketKeyword_6_4());
			}
		)?
		(
			otherlv_14='elements'
			{
				newLeafNode(otherlv_14, grammarAccess.getRequirementsGroupAccess().getElementsKeyword_7_0());
			}
			otherlv_15='{'
			{
				newLeafNode(otherlv_15, grammarAccess.getRequirementsGroupAccess().getLeftCurlyBracketKeyword_7_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRequirementsGroupAccess().getElementsRequirementModelElementParserRuleCall_7_2_0());
					}
					lv_elements_16_0=ruleRequirementModelElement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRequirementsGroupRule());
						}
						add(
							$current,
							"elements",
							lv_elements_16_0,
							"de.tubs.cs.isf.reqeditor.administration.ReqAdmin.RequirementModelElement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_17=','
				{
					newLeafNode(otherlv_17, grammarAccess.getRequirementsGroupAccess().getCommaKeyword_7_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getRequirementsGroupAccess().getElementsRequirementModelElementParserRuleCall_7_3_1_0());
						}
						lv_elements_18_0=ruleRequirementModelElement
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getRequirementsGroupRule());
							}
							add(
								$current,
								"elements",
								lv_elements_18_0,
								"de.tubs.cs.isf.reqeditor.administration.ReqAdmin.RequirementModelElement");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_19='}'
			{
				newLeafNode(otherlv_19, grammarAccess.getRequirementsGroupAccess().getRightCurlyBracketKeyword_7_4());
			}
		)?
	)
;

// Entry rule entryRuleRequirement
entryRuleRequirement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRequirementRule()); }
	iv_ruleRequirement=ruleRequirement
	{ $current=$iv_ruleRequirement.current; }
	EOF;

// Rule Requirement
ruleRequirement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getRequirementAccess().getRequirementAction_0(),
					$current);
			}
		)
		otherlv_1='Requirement'
		{
			newLeafNode(otherlv_1, grammarAccess.getRequirementAccess().getRequirementKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRequirementAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRequirementRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"de.tubs.cs.isf.reqeditor.administration.ReqAdmin.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='with'
		{
			newLeafNode(otherlv_3, grammarAccess.getRequirementAccess().getWithKeyword_3());
		}
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getRequirementAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			otherlv_5='id'
			{
				newLeafNode(otherlv_5, grammarAccess.getRequirementAccess().getIdKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRequirementAccess().getIdEStringParserRuleCall_5_1_0());
					}
					lv_id_6_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRequirementRule());
						}
						set(
							$current,
							"id",
							lv_id_6_0,
							"de.tubs.cs.isf.reqeditor.administration.ReqAdmin.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_7='description'
			{
				newLeafNode(otherlv_7, grammarAccess.getRequirementAccess().getDescriptionKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRequirementAccess().getDescriptionEStringParserRuleCall_6_1_0());
					}
					lv_description_8_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRequirementRule());
						}
						set(
							$current,
							"description",
							lv_description_8_0,
							"de.tubs.cs.isf.reqeditor.administration.ReqAdmin.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_9='type'
			{
				newLeafNode(otherlv_9, grammarAccess.getRequirementAccess().getTypeKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRequirementAccess().getTypeRequirementTypeEnumRuleCall_7_1_0());
					}
					lv_type_10_0=ruleRequirementType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRequirementRule());
						}
						set(
							$current,
							"type",
							lv_type_10_0,
							"de.tubs.cs.isf.reqeditor.administration.ReqAdmin.RequirementType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_11='priority'
			{
				newLeafNode(otherlv_11, grammarAccess.getRequirementAccess().getPriorityKeyword_8_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRequirementAccess().getPriorityRequirementPriorityEnumRuleCall_8_1_0());
					}
					lv_priority_12_0=ruleRequirementPriority
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRequirementRule());
						}
						set(
							$current,
							"priority",
							lv_priority_12_0,
							"de.tubs.cs.isf.reqeditor.administration.ReqAdmin.RequirementPriority");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_13='constraints'
			{
				newLeafNode(otherlv_13, grammarAccess.getRequirementAccess().getConstraintsKeyword_9_0());
			}
			otherlv_14='{'
			{
				newLeafNode(otherlv_14, grammarAccess.getRequirementAccess().getLeftCurlyBracketKeyword_9_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRequirementAccess().getConstraintsConstraintParserRuleCall_9_2_0());
					}
					lv_constraints_15_0=ruleConstraint
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRequirementRule());
						}
						add(
							$current,
							"constraints",
							lv_constraints_15_0,
							"de.tubs.cs.isf.reqeditor.administration.ReqAdmin.Constraint");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_16=','
				{
					newLeafNode(otherlv_16, grammarAccess.getRequirementAccess().getCommaKeyword_9_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getRequirementAccess().getConstraintsConstraintParserRuleCall_9_3_1_0());
						}
						lv_constraints_17_0=ruleConstraint
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getRequirementRule());
							}
							add(
								$current,
								"constraints",
								lv_constraints_17_0,
								"de.tubs.cs.isf.reqeditor.administration.ReqAdmin.Constraint");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_18='}'
			{
				newLeafNode(otherlv_18, grammarAccess.getRequirementAccess().getRightCurlyBracketKeyword_9_4());
			}
		)?
		(
			otherlv_19='attributes'
			{
				newLeafNode(otherlv_19, grammarAccess.getRequirementAccess().getAttributesKeyword_10_0());
			}
			otherlv_20='{'
			{
				newLeafNode(otherlv_20, grammarAccess.getRequirementAccess().getLeftCurlyBracketKeyword_10_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRequirementAccess().getAttributesAttributeValueParserRuleCall_10_2_0());
					}
					lv_attributes_21_0=ruleAttributeValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRequirementRule());
						}
						add(
							$current,
							"attributes",
							lv_attributes_21_0,
							"de.tubs.cs.isf.reqeditor.administration.ReqAdmin.AttributeValue");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_22=','
				{
					newLeafNode(otherlv_22, grammarAccess.getRequirementAccess().getCommaKeyword_10_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getRequirementAccess().getAttributesAttributeValueParserRuleCall_10_3_1_0());
						}
						lv_attributes_23_0=ruleAttributeValue
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getRequirementRule());
							}
							add(
								$current,
								"attributes",
								lv_attributes_23_0,
								"de.tubs.cs.isf.reqeditor.administration.ReqAdmin.AttributeValue");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_24='}'
			{
				newLeafNode(otherlv_24, grammarAccess.getRequirementAccess().getRightCurlyBracketKeyword_10_4());
			}
		)?
		otherlv_25='}'
		{
			newLeafNode(otherlv_25, grammarAccess.getRequirementAccess().getRightCurlyBracketKeyword_11());
		}
	)
;

// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	iv_ruleExpression=ruleExpression
	{ $current=$iv_ruleExpression.current; }
	EOF;

// Rule Expression
ruleExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getExpressionAccess().getExpressionAction_0(),
					$current);
			}
		)
		otherlv_1='create'
		{
			newLeafNode(otherlv_1, grammarAccess.getExpressionAccess().getCreateKeyword_1());
		}
		otherlv_2='Expression with'
		{
			newLeafNode(otherlv_2, grammarAccess.getExpressionAccess().getExpressionWithKeyword_2());
		}
	)
;

// Entry rule entryRuleAttributeValue
entryRuleAttributeValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttributeValueRule()); }
	iv_ruleAttributeValue=ruleAttributeValue
	{ $current=$iv_ruleAttributeValue.current; }
	EOF;

// Rule AttributeValue
ruleAttributeValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getAttributeValueAccess().getAttributeValueAction_0(),
					$current);
			}
		)
		otherlv_1='AttributeValue'
		{
			newLeafNode(otherlv_1, grammarAccess.getAttributeValueAccess().getAttributeValueKeyword_1());
		}
		(
			otherlv_2='value of'
			{
				newLeafNode(otherlv_2, grammarAccess.getAttributeValueAccess().getValueOfKeyword_2_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAttributeValueRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getAttributeValueAccess().getValueOfAttributeCrossReference_2_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_4='with value'
			{
				newLeafNode(otherlv_4, grammarAccess.getAttributeValueAccess().getWithValueKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAttributeValueAccess().getValueEStringParserRuleCall_3_1_0());
					}
					lv_value_5_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAttributeValueRule());
						}
						set(
							$current,
							"value",
							lv_value_5_0,
							"de.tubs.cs.isf.reqeditor.administration.ReqAdmin.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Rule RequirementType
ruleRequirementType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='FUNCTIONAL'
			{
				$current = grammarAccess.getRequirementTypeAccess().getFUNCTIONALEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getRequirementTypeAccess().getFUNCTIONALEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='NON_FUNCTIONAL'
			{
				$current = grammarAccess.getRequirementTypeAccess().getNON_FUNCTIONALEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getRequirementTypeAccess().getNON_FUNCTIONALEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='NONE'
			{
				$current = grammarAccess.getRequirementTypeAccess().getNONEEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getRequirementTypeAccess().getNONEEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='OTHER'
			{
				$current = grammarAccess.getRequirementTypeAccess().getOTHEREnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getRequirementTypeAccess().getOTHEREnumLiteralDeclaration_3());
			}
		)
	)
;

// Rule RequirementPriority
ruleRequirementPriority returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='ESSENTIAL'
			{
				$current = grammarAccess.getRequirementPriorityAccess().getESSENTIALEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getRequirementPriorityAccess().getESSENTIALEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='CONDITIONAL'
			{
				$current = grammarAccess.getRequirementPriorityAccess().getCONDITIONALEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getRequirementPriorityAccess().getCONDITIONALEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='OPTIONAL'
			{
				$current = grammarAccess.getRequirementPriorityAccess().getOPTIONALEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getRequirementPriorityAccess().getOPTIONALEnumLiteralDeclaration_2());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
