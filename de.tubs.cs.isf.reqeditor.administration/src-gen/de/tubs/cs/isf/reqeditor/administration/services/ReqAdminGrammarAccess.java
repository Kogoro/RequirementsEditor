/*
 * generated by Xtext 2.10.0
 */
package de.tubs.cs.isf.reqeditor.administration.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractEnumRuleElementFinder;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class ReqAdminGrammarAccess extends AbstractGrammarElementFinder {
	
	public class RequirementsModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.tubs.cs.isf.reqeditor.administration.ReqAdmin.RequirementsModel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRequirementsModelAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cRequirementsModelKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cAuthorKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cCreatorAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cCreatorEStringParserRuleCall_3_1_0 = (RuleCall)cCreatorAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cVersionKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cVersionAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cVersionEStringParserRuleCall_4_1_0 = (RuleCall)cVersionAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cElementsKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cElementsAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cElementsRequirementModelElementParserRuleCall_5_2_0 = (RuleCall)cElementsAssignment_5_2.eContents().get(0);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final Keyword cCommaKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Assignment cElementsAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final RuleCall cElementsRequirementModelElementParserRuleCall_5_3_1_0 = (RuleCall)cElementsAssignment_5_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cAttributesKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cAttributesAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cAttributesAttributeParserRuleCall_6_2_0 = (RuleCall)cAttributesAssignment_6_2.eContents().get(0);
		private final Group cGroup_6_3 = (Group)cGroup_6.eContents().get(3);
		private final Keyword cCommaKeyword_6_3_0 = (Keyword)cGroup_6_3.eContents().get(0);
		private final Assignment cAttributesAssignment_6_3_1 = (Assignment)cGroup_6_3.eContents().get(1);
		private final RuleCall cAttributesAttributeParserRuleCall_6_3_1_0 = (RuleCall)cAttributesAssignment_6_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_4 = (Keyword)cGroup_6.eContents().get(4);
		
		//RequirementsModel:
		//	{RequirementsModel}
		//	'RequirementsModel' name=EString ('author' creator=EString)? ('version' version=EString)? ('elements' '{'
		//	elements+=RequirementModelElement ("," elements+=RequirementModelElement)* '}')? ('attributes' '{'
		//	attributes+=Attribute ("," attributes+=Attribute)* '}')?;
		@Override public ParserRule getRule() { return rule; }
		
		//{RequirementsModel} 'RequirementsModel' name=EString ('author' creator=EString)? ('version' version=EString)?
		//('elements' '{' elements+=RequirementModelElement ("," elements+=RequirementModelElement)* '}')? ('attributes' '{'
		//attributes+=Attribute ("," attributes+=Attribute)* '}')?
		public Group getGroup() { return cGroup; }
		
		//{RequirementsModel}
		public Action getRequirementsModelAction_0() { return cRequirementsModelAction_0; }
		
		//'RequirementsModel'
		public Keyword getRequirementsModelKeyword_1() { return cRequirementsModelKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//('author' creator=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'author'
		public Keyword getAuthorKeyword_3_0() { return cAuthorKeyword_3_0; }
		
		//creator=EString
		public Assignment getCreatorAssignment_3_1() { return cCreatorAssignment_3_1; }
		
		//EString
		public RuleCall getCreatorEStringParserRuleCall_3_1_0() { return cCreatorEStringParserRuleCall_3_1_0; }
		
		//('version' version=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'version'
		public Keyword getVersionKeyword_4_0() { return cVersionKeyword_4_0; }
		
		//version=EString
		public Assignment getVersionAssignment_4_1() { return cVersionAssignment_4_1; }
		
		//EString
		public RuleCall getVersionEStringParserRuleCall_4_1_0() { return cVersionEStringParserRuleCall_4_1_0; }
		
		//('elements' '{' elements+=RequirementModelElement ("," elements+=RequirementModelElement)* '}')?
		public Group getGroup_5() { return cGroup_5; }
		
		//'elements'
		public Keyword getElementsKeyword_5_0() { return cElementsKeyword_5_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5_1() { return cLeftCurlyBracketKeyword_5_1; }
		
		//elements+=RequirementModelElement
		public Assignment getElementsAssignment_5_2() { return cElementsAssignment_5_2; }
		
		//RequirementModelElement
		public RuleCall getElementsRequirementModelElementParserRuleCall_5_2_0() { return cElementsRequirementModelElementParserRuleCall_5_2_0; }
		
		//("," elements+=RequirementModelElement)*
		public Group getGroup_5_3() { return cGroup_5_3; }
		
		//","
		public Keyword getCommaKeyword_5_3_0() { return cCommaKeyword_5_3_0; }
		
		//elements+=RequirementModelElement
		public Assignment getElementsAssignment_5_3_1() { return cElementsAssignment_5_3_1; }
		
		//RequirementModelElement
		public RuleCall getElementsRequirementModelElementParserRuleCall_5_3_1_0() { return cElementsRequirementModelElementParserRuleCall_5_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5_4() { return cRightCurlyBracketKeyword_5_4; }
		
		//('attributes' '{' attributes+=Attribute ("," attributes+=Attribute)* '}')?
		public Group getGroup_6() { return cGroup_6; }
		
		//'attributes'
		public Keyword getAttributesKeyword_6_0() { return cAttributesKeyword_6_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6_1() { return cLeftCurlyBracketKeyword_6_1; }
		
		//attributes+=Attribute
		public Assignment getAttributesAssignment_6_2() { return cAttributesAssignment_6_2; }
		
		//Attribute
		public RuleCall getAttributesAttributeParserRuleCall_6_2_0() { return cAttributesAttributeParserRuleCall_6_2_0; }
		
		//("," attributes+=Attribute)*
		public Group getGroup_6_3() { return cGroup_6_3; }
		
		//","
		public Keyword getCommaKeyword_6_3_0() { return cCommaKeyword_6_3_0; }
		
		//attributes+=Attribute
		public Assignment getAttributesAssignment_6_3_1() { return cAttributesAssignment_6_3_1; }
		
		//Attribute
		public RuleCall getAttributesAttributeParserRuleCall_6_3_1_0() { return cAttributesAttributeParserRuleCall_6_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6_4() { return cRightCurlyBracketKeyword_6_4; }
	}
	public class RequirementModelElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.tubs.cs.isf.reqeditor.administration.ReqAdmin.RequirementModelElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cCreateKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final RuleCall cRequirementsGroupParserRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cCreateKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cRequirementParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//RequirementModelElement:
		//	'Create' RequirementsGroup | 'Create' Requirement;
		@Override public ParserRule getRule() { return rule; }
		
		//'Create' RequirementsGroup | 'Create' Requirement
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'Create' RequirementsGroup
		public Group getGroup_0() { return cGroup_0; }
		
		//'Create'
		public Keyword getCreateKeyword_0_0() { return cCreateKeyword_0_0; }
		
		//RequirementsGroup
		public RuleCall getRequirementsGroupParserRuleCall_0_1() { return cRequirementsGroupParserRuleCall_0_1; }
		
		//'Create' Requirement
		public Group getGroup_1() { return cGroup_1; }
		
		//'Create'
		public Keyword getCreateKeyword_1_0() { return cCreateKeyword_1_0; }
		
		//Requirement
		public RuleCall getRequirementParserRuleCall_1_1() { return cRequirementParserRuleCall_1_1; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.tubs.cs.isf.reqeditor.administration.ReqAdmin.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString:
		//	STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class AttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.tubs.cs.isf.reqeditor.administration.ReqAdmin.Attribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAttributeAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cAttributeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cIdAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cIdEStringParserRuleCall_2_0 = (RuleCall)cIdAssignment_2.eContents().get(0);
		
		//Attribute:
		//	{Attribute}
		//	'Attribute' id=EString?;
		@Override public ParserRule getRule() { return rule; }
		
		//{Attribute} 'Attribute' id=EString?
		public Group getGroup() { return cGroup; }
		
		//{Attribute}
		public Action getAttributeAction_0() { return cAttributeAction_0; }
		
		//'Attribute'
		public Keyword getAttributeKeyword_1() { return cAttributeKeyword_1; }
		
		//id=EString?
		public Assignment getIdAssignment_2() { return cIdAssignment_2; }
		
		//EString
		public RuleCall getIdEStringParserRuleCall_2_0() { return cIdEStringParserRuleCall_2_0; }
	}
	public class ConstraintElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.tubs.cs.isf.reqeditor.administration.ReqAdmin.Constraint");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cConstraintAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cConstraintKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cWithKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cExpressionKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cExpressionAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cExpressionExpressionParserRuleCall_4_2_0 = (RuleCall)cExpressionAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cExpressionAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cExpressionExpressionParserRuleCall_4_3_1_0 = (RuleCall)cExpressionAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		
		//Constraint:
		//	{Constraint}
		//	'Constraint' name=EString 'with' ('expression' '{' expression+=Expression ("," expression+=Expression)* '}')?;
		@Override public ParserRule getRule() { return rule; }
		
		//{Constraint} 'Constraint' name=EString 'with' ('expression' '{' expression+=Expression ("," expression+=Expression)*
		//'}')?
		public Group getGroup() { return cGroup; }
		
		//{Constraint}
		public Action getConstraintAction_0() { return cConstraintAction_0; }
		
		//'Constraint'
		public Keyword getConstraintKeyword_1() { return cConstraintKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'with'
		public Keyword getWithKeyword_3() { return cWithKeyword_3; }
		
		//('expression' '{' expression+=Expression ("," expression+=Expression)* '}')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'expression'
		public Keyword getExpressionKeyword_4_0() { return cExpressionKeyword_4_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }
		
		//expression+=Expression
		public Assignment getExpressionAssignment_4_2() { return cExpressionAssignment_4_2; }
		
		//Expression
		public RuleCall getExpressionExpressionParserRuleCall_4_2_0() { return cExpressionExpressionParserRuleCall_4_2_0; }
		
		//("," expression+=Expression)*
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }
		
		//expression+=Expression
		public Assignment getExpressionAssignment_4_3_1() { return cExpressionAssignment_4_3_1; }
		
		//Expression
		public RuleCall getExpressionExpressionParserRuleCall_4_3_1_0() { return cExpressionExpressionParserRuleCall_4_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }
	}
	public class RequirementsGroupElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.tubs.cs.isf.reqeditor.administration.ReqAdmin.RequirementsGroup");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRequirementsGroupAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cRequirementsGroupKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cWithKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cIdKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cIdAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cIdEStringParserRuleCall_4_1_0 = (RuleCall)cIdAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cDescriptionKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cDescriptionAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cDescriptionEStringParserRuleCall_5_1_0 = (RuleCall)cDescriptionAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cConstraintsKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cConstraintsAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cConstraintsConstraintParserRuleCall_6_2_0 = (RuleCall)cConstraintsAssignment_6_2.eContents().get(0);
		private final Group cGroup_6_3 = (Group)cGroup_6.eContents().get(3);
		private final Keyword cCommaKeyword_6_3_0 = (Keyword)cGroup_6_3.eContents().get(0);
		private final Assignment cConstraintsAssignment_6_3_1 = (Assignment)cGroup_6_3.eContents().get(1);
		private final RuleCall cConstraintsConstraintParserRuleCall_6_3_1_0 = (RuleCall)cConstraintsAssignment_6_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_4 = (Keyword)cGroup_6.eContents().get(4);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cElementsKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Assignment cElementsAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cElementsRequirementModelElementParserRuleCall_7_2_0 = (RuleCall)cElementsAssignment_7_2.eContents().get(0);
		private final Group cGroup_7_3 = (Group)cGroup_7.eContents().get(3);
		private final Keyword cCommaKeyword_7_3_0 = (Keyword)cGroup_7_3.eContents().get(0);
		private final Assignment cElementsAssignment_7_3_1 = (Assignment)cGroup_7_3.eContents().get(1);
		private final RuleCall cElementsRequirementModelElementParserRuleCall_7_3_1_0 = (RuleCall)cElementsAssignment_7_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7_4 = (Keyword)cGroup_7.eContents().get(4);
		
		//RequirementsGroup:
		//	{RequirementsGroup}
		//	'RequirementsGroup' name=EString 'with' ('id' id=EString)? ('description:' description=EString)? ('constraints' '{'
		//	constraints+=Constraint ("," constraints+=Constraint)* '}')? ('elements' '{' elements+=RequirementModelElement (","
		//	elements+=RequirementModelElement)* '}')?;
		@Override public ParserRule getRule() { return rule; }
		
		//{RequirementsGroup} 'RequirementsGroup' name=EString 'with' ('id' id=EString)? ('description:' description=EString)?
		//('constraints' '{' constraints+=Constraint ("," constraints+=Constraint)* '}')? ('elements' '{'
		//elements+=RequirementModelElement ("," elements+=RequirementModelElement)* '}')?
		public Group getGroup() { return cGroup; }
		
		//{RequirementsGroup}
		public Action getRequirementsGroupAction_0() { return cRequirementsGroupAction_0; }
		
		//'RequirementsGroup'
		public Keyword getRequirementsGroupKeyword_1() { return cRequirementsGroupKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'with'
		public Keyword getWithKeyword_3() { return cWithKeyword_3; }
		
		//('id' id=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'id'
		public Keyword getIdKeyword_4_0() { return cIdKeyword_4_0; }
		
		//id=EString
		public Assignment getIdAssignment_4_1() { return cIdAssignment_4_1; }
		
		//EString
		public RuleCall getIdEStringParserRuleCall_4_1_0() { return cIdEStringParserRuleCall_4_1_0; }
		
		//('description:' description=EString)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'description:'
		public Keyword getDescriptionKeyword_5_0() { return cDescriptionKeyword_5_0; }
		
		//description=EString
		public Assignment getDescriptionAssignment_5_1() { return cDescriptionAssignment_5_1; }
		
		//EString
		public RuleCall getDescriptionEStringParserRuleCall_5_1_0() { return cDescriptionEStringParserRuleCall_5_1_0; }
		
		//('constraints' '{' constraints+=Constraint ("," constraints+=Constraint)* '}')?
		public Group getGroup_6() { return cGroup_6; }
		
		//'constraints'
		public Keyword getConstraintsKeyword_6_0() { return cConstraintsKeyword_6_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6_1() { return cLeftCurlyBracketKeyword_6_1; }
		
		//constraints+=Constraint
		public Assignment getConstraintsAssignment_6_2() { return cConstraintsAssignment_6_2; }
		
		//Constraint
		public RuleCall getConstraintsConstraintParserRuleCall_6_2_0() { return cConstraintsConstraintParserRuleCall_6_2_0; }
		
		//("," constraints+=Constraint)*
		public Group getGroup_6_3() { return cGroup_6_3; }
		
		//","
		public Keyword getCommaKeyword_6_3_0() { return cCommaKeyword_6_3_0; }
		
		//constraints+=Constraint
		public Assignment getConstraintsAssignment_6_3_1() { return cConstraintsAssignment_6_3_1; }
		
		//Constraint
		public RuleCall getConstraintsConstraintParserRuleCall_6_3_1_0() { return cConstraintsConstraintParserRuleCall_6_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6_4() { return cRightCurlyBracketKeyword_6_4; }
		
		//('elements' '{' elements+=RequirementModelElement ("," elements+=RequirementModelElement)* '}')?
		public Group getGroup_7() { return cGroup_7; }
		
		//'elements'
		public Keyword getElementsKeyword_7_0() { return cElementsKeyword_7_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_7_1() { return cLeftCurlyBracketKeyword_7_1; }
		
		//elements+=RequirementModelElement
		public Assignment getElementsAssignment_7_2() { return cElementsAssignment_7_2; }
		
		//RequirementModelElement
		public RuleCall getElementsRequirementModelElementParserRuleCall_7_2_0() { return cElementsRequirementModelElementParserRuleCall_7_2_0; }
		
		//("," elements+=RequirementModelElement)*
		public Group getGroup_7_3() { return cGroup_7_3; }
		
		//","
		public Keyword getCommaKeyword_7_3_0() { return cCommaKeyword_7_3_0; }
		
		//elements+=RequirementModelElement
		public Assignment getElementsAssignment_7_3_1() { return cElementsAssignment_7_3_1; }
		
		//RequirementModelElement
		public RuleCall getElementsRequirementModelElementParserRuleCall_7_3_1_0() { return cElementsRequirementModelElementParserRuleCall_7_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7_4() { return cRightCurlyBracketKeyword_7_4; }
	}
	public class RequirementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.tubs.cs.isf.reqeditor.administration.ReqAdmin.Requirement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRequirementAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cRequirementKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cWithKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cIdKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cIdAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cIdEStringParserRuleCall_5_1_0 = (RuleCall)cIdAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cDescriptionKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cDescriptionAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cDescriptionEStringParserRuleCall_6_1_0 = (RuleCall)cDescriptionAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cTypeKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cTypeAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cTypeRequirementTypeEnumRuleCall_7_1_0 = (RuleCall)cTypeAssignment_7_1.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cPriorityKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cPriorityAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cPriorityRequirementPriorityEnumRuleCall_8_1_0 = (RuleCall)cPriorityAssignment_8_1.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cConstraintsKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_9_1 = (Keyword)cGroup_9.eContents().get(1);
		private final Assignment cConstraintsAssignment_9_2 = (Assignment)cGroup_9.eContents().get(2);
		private final RuleCall cConstraintsConstraintParserRuleCall_9_2_0 = (RuleCall)cConstraintsAssignment_9_2.eContents().get(0);
		private final Group cGroup_9_3 = (Group)cGroup_9.eContents().get(3);
		private final Keyword cCommaKeyword_9_3_0 = (Keyword)cGroup_9_3.eContents().get(0);
		private final Assignment cConstraintsAssignment_9_3_1 = (Assignment)cGroup_9_3.eContents().get(1);
		private final RuleCall cConstraintsConstraintParserRuleCall_9_3_1_0 = (RuleCall)cConstraintsAssignment_9_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9_4 = (Keyword)cGroup_9.eContents().get(4);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cAttributesKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_10_1 = (Keyword)cGroup_10.eContents().get(1);
		private final Assignment cAttributesAssignment_10_2 = (Assignment)cGroup_10.eContents().get(2);
		private final RuleCall cAttributesAttributeValueParserRuleCall_10_2_0 = (RuleCall)cAttributesAssignment_10_2.eContents().get(0);
		private final Group cGroup_10_3 = (Group)cGroup_10.eContents().get(3);
		private final Keyword cCommaKeyword_10_3_0 = (Keyword)cGroup_10_3.eContents().get(0);
		private final Assignment cAttributesAssignment_10_3_1 = (Assignment)cGroup_10_3.eContents().get(1);
		private final RuleCall cAttributesAttributeValueParserRuleCall_10_3_1_0 = (RuleCall)cAttributesAssignment_10_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_10_4 = (Keyword)cGroup_10.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//Requirement:
		//	{Requirement}
		//	'Requirement' name=EString 'with'
		//	'{' ('id' id=EString)? ('description' description=EString)? ('type' type=RequirementType)? ('priority'
		//	priority=RequirementPriority)? ('constraints' '{' constraints+=Constraint ("," constraints+=Constraint)* '}')?
		//	('attributes' '{' attributes+=AttributeValue ("," attributes+=AttributeValue)* '}')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Requirement} 'Requirement' name=EString 'with' '{' ('id' id=EString)? ('description' description=EString)? ('type'
		//type=RequirementType)? ('priority' priority=RequirementPriority)? ('constraints' '{' constraints+=Constraint (","
		//constraints+=Constraint)* '}')? ('attributes' '{' attributes+=AttributeValue ("," attributes+=AttributeValue)* '}')?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Requirement}
		public Action getRequirementAction_0() { return cRequirementAction_0; }
		
		//'Requirement'
		public Keyword getRequirementKeyword_1() { return cRequirementKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'with'
		public Keyword getWithKeyword_3() { return cWithKeyword_3; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }
		
		//('id' id=EString)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'id'
		public Keyword getIdKeyword_5_0() { return cIdKeyword_5_0; }
		
		//id=EString
		public Assignment getIdAssignment_5_1() { return cIdAssignment_5_1; }
		
		//EString
		public RuleCall getIdEStringParserRuleCall_5_1_0() { return cIdEStringParserRuleCall_5_1_0; }
		
		//('description' description=EString)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'description'
		public Keyword getDescriptionKeyword_6_0() { return cDescriptionKeyword_6_0; }
		
		//description=EString
		public Assignment getDescriptionAssignment_6_1() { return cDescriptionAssignment_6_1; }
		
		//EString
		public RuleCall getDescriptionEStringParserRuleCall_6_1_0() { return cDescriptionEStringParserRuleCall_6_1_0; }
		
		//('type' type=RequirementType)?
		public Group getGroup_7() { return cGroup_7; }
		
		//'type'
		public Keyword getTypeKeyword_7_0() { return cTypeKeyword_7_0; }
		
		//type=RequirementType
		public Assignment getTypeAssignment_7_1() { return cTypeAssignment_7_1; }
		
		//RequirementType
		public RuleCall getTypeRequirementTypeEnumRuleCall_7_1_0() { return cTypeRequirementTypeEnumRuleCall_7_1_0; }
		
		//('priority' priority=RequirementPriority)?
		public Group getGroup_8() { return cGroup_8; }
		
		//'priority'
		public Keyword getPriorityKeyword_8_0() { return cPriorityKeyword_8_0; }
		
		//priority=RequirementPriority
		public Assignment getPriorityAssignment_8_1() { return cPriorityAssignment_8_1; }
		
		//RequirementPriority
		public RuleCall getPriorityRequirementPriorityEnumRuleCall_8_1_0() { return cPriorityRequirementPriorityEnumRuleCall_8_1_0; }
		
		//('constraints' '{' constraints+=Constraint ("," constraints+=Constraint)* '}')?
		public Group getGroup_9() { return cGroup_9; }
		
		//'constraints'
		public Keyword getConstraintsKeyword_9_0() { return cConstraintsKeyword_9_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_9_1() { return cLeftCurlyBracketKeyword_9_1; }
		
		//constraints+=Constraint
		public Assignment getConstraintsAssignment_9_2() { return cConstraintsAssignment_9_2; }
		
		//Constraint
		public RuleCall getConstraintsConstraintParserRuleCall_9_2_0() { return cConstraintsConstraintParserRuleCall_9_2_0; }
		
		//("," constraints+=Constraint)*
		public Group getGroup_9_3() { return cGroup_9_3; }
		
		//","
		public Keyword getCommaKeyword_9_3_0() { return cCommaKeyword_9_3_0; }
		
		//constraints+=Constraint
		public Assignment getConstraintsAssignment_9_3_1() { return cConstraintsAssignment_9_3_1; }
		
		//Constraint
		public RuleCall getConstraintsConstraintParserRuleCall_9_3_1_0() { return cConstraintsConstraintParserRuleCall_9_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9_4() { return cRightCurlyBracketKeyword_9_4; }
		
		//('attributes' '{' attributes+=AttributeValue ("," attributes+=AttributeValue)* '}')?
		public Group getGroup_10() { return cGroup_10; }
		
		//'attributes'
		public Keyword getAttributesKeyword_10_0() { return cAttributesKeyword_10_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_10_1() { return cLeftCurlyBracketKeyword_10_1; }
		
		//attributes+=AttributeValue
		public Assignment getAttributesAssignment_10_2() { return cAttributesAssignment_10_2; }
		
		//AttributeValue
		public RuleCall getAttributesAttributeValueParserRuleCall_10_2_0() { return cAttributesAttributeValueParserRuleCall_10_2_0; }
		
		//("," attributes+=AttributeValue)*
		public Group getGroup_10_3() { return cGroup_10_3; }
		
		//","
		public Keyword getCommaKeyword_10_3_0() { return cCommaKeyword_10_3_0; }
		
		//attributes+=AttributeValue
		public Assignment getAttributesAssignment_10_3_1() { return cAttributesAssignment_10_3_1; }
		
		//AttributeValue
		public RuleCall getAttributesAttributeValueParserRuleCall_10_3_1_0() { return cAttributesAttributeValueParserRuleCall_10_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_10_4() { return cRightCurlyBracketKeyword_10_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
	}
	public class ExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.tubs.cs.isf.reqeditor.administration.ReqAdmin.Expression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cExpressionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cCreateKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cExpressionWithKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		////Terminal BOOLEAN: 'true' | 'false';
		//Expression:
		//	{Expression}
		//	'create' 'Expression with'
		//	//helper function or expression to test boolean expression
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{Expression} 'create' 'Expression with'
		public Group getGroup() { return cGroup; }
		
		//{Expression}
		public Action getExpressionAction_0() { return cExpressionAction_0; }
		
		//'create'
		public Keyword getCreateKeyword_1() { return cCreateKeyword_1; }
		
		//'Expression with'
		public Keyword getExpressionWithKeyword_2() { return cExpressionWithKeyword_2; }
	}
	public class AttributeValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.tubs.cs.isf.reqeditor.administration.ReqAdmin.AttributeValue");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAttributeValueAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cAttributeValueKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cValueOfKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cValueOfAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cValueOfAttributeCrossReference_2_1_0 = (CrossReference)cValueOfAssignment_2_1.eContents().get(0);
		private final RuleCall cValueOfAttributeEStringParserRuleCall_2_1_0_1 = (RuleCall)cValueOfAttributeCrossReference_2_1_0.eContents().get(1);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cWithValueKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cValueAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cValueEStringParserRuleCall_3_1_0 = (RuleCall)cValueAssignment_3_1.eContents().get(0);
		
		//AttributeValue:
		//	{AttributeValue}
		//	'AttributeValue' ('value of' valueOf=[Attribute|EString])? ('with value' value=EString)?;
		@Override public ParserRule getRule() { return rule; }
		
		//{AttributeValue} 'AttributeValue' ('value of' valueOf=[Attribute|EString])? ('with value' value=EString)?
		public Group getGroup() { return cGroup; }
		
		//{AttributeValue}
		public Action getAttributeValueAction_0() { return cAttributeValueAction_0; }
		
		//'AttributeValue'
		public Keyword getAttributeValueKeyword_1() { return cAttributeValueKeyword_1; }
		
		//('value of' valueOf=[Attribute|EString])?
		public Group getGroup_2() { return cGroup_2; }
		
		//'value of'
		public Keyword getValueOfKeyword_2_0() { return cValueOfKeyword_2_0; }
		
		//valueOf=[Attribute|EString]
		public Assignment getValueOfAssignment_2_1() { return cValueOfAssignment_2_1; }
		
		//[Attribute|EString]
		public CrossReference getValueOfAttributeCrossReference_2_1_0() { return cValueOfAttributeCrossReference_2_1_0; }
		
		//EString
		public RuleCall getValueOfAttributeEStringParserRuleCall_2_1_0_1() { return cValueOfAttributeEStringParserRuleCall_2_1_0_1; }
		
		//('with value' value=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'with value'
		public Keyword getWithValueKeyword_3_0() { return cWithValueKeyword_3_0; }
		
		//value=EString
		public Assignment getValueAssignment_3_1() { return cValueAssignment_3_1; }
		
		//EString
		public RuleCall getValueEStringParserRuleCall_3_1_0() { return cValueEStringParserRuleCall_3_1_0; }
	}
	
	public class RequirementTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "de.tubs.cs.isf.reqeditor.administration.ReqAdmin.RequirementType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cFUNCTIONALEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cFUNCTIONALFUNCTIONALKeyword_0_0 = (Keyword)cFUNCTIONALEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cNON_FUNCTIONALEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cNON_FUNCTIONALNON_FUNCTIONALKeyword_1_0 = (Keyword)cNON_FUNCTIONALEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cNONEEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cNONENONEKeyword_2_0 = (Keyword)cNONEEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cOTHEREnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cOTHEROTHERKeyword_3_0 = (Keyword)cOTHEREnumLiteralDeclaration_3.eContents().get(0);
		
		//enum RequirementType:
		//	FUNCTIONAL | NON_FUNCTIONAL | NONE | OTHER;
		public EnumRule getRule() { return rule; }
		
		//FUNCTIONAL | NON_FUNCTIONAL | NONE | OTHER
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//FUNCTIONAL
		public EnumLiteralDeclaration getFUNCTIONALEnumLiteralDeclaration_0() { return cFUNCTIONALEnumLiteralDeclaration_0; }
		
		//'FUNCTIONAL'
		public Keyword getFUNCTIONALFUNCTIONALKeyword_0_0() { return cFUNCTIONALFUNCTIONALKeyword_0_0; }
		
		//NON_FUNCTIONAL
		public EnumLiteralDeclaration getNON_FUNCTIONALEnumLiteralDeclaration_1() { return cNON_FUNCTIONALEnumLiteralDeclaration_1; }
		
		//'NON_FUNCTIONAL'
		public Keyword getNON_FUNCTIONALNON_FUNCTIONALKeyword_1_0() { return cNON_FUNCTIONALNON_FUNCTIONALKeyword_1_0; }
		
		//NONE
		public EnumLiteralDeclaration getNONEEnumLiteralDeclaration_2() { return cNONEEnumLiteralDeclaration_2; }
		
		//'NONE'
		public Keyword getNONENONEKeyword_2_0() { return cNONENONEKeyword_2_0; }
		
		//OTHER
		public EnumLiteralDeclaration getOTHEREnumLiteralDeclaration_3() { return cOTHEREnumLiteralDeclaration_3; }
		
		//'OTHER'
		public Keyword getOTHEROTHERKeyword_3_0() { return cOTHEROTHERKeyword_3_0; }
	}
	public class RequirementPriorityElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "de.tubs.cs.isf.reqeditor.administration.ReqAdmin.RequirementPriority");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cESSENTIALEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cESSENTIALESSENTIALKeyword_0_0 = (Keyword)cESSENTIALEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cCONDITIONALEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cCONDITIONALCONDITIONALKeyword_1_0 = (Keyword)cCONDITIONALEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cOPTIONALEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cOPTIONALOPTIONALKeyword_2_0 = (Keyword)cOPTIONALEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum RequirementPriority:
		//	ESSENTIAL | CONDITIONAL | OPTIONAL;
		public EnumRule getRule() { return rule; }
		
		//ESSENTIAL | CONDITIONAL | OPTIONAL
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ESSENTIAL
		public EnumLiteralDeclaration getESSENTIALEnumLiteralDeclaration_0() { return cESSENTIALEnumLiteralDeclaration_0; }
		
		//'ESSENTIAL'
		public Keyword getESSENTIALESSENTIALKeyword_0_0() { return cESSENTIALESSENTIALKeyword_0_0; }
		
		//CONDITIONAL
		public EnumLiteralDeclaration getCONDITIONALEnumLiteralDeclaration_1() { return cCONDITIONALEnumLiteralDeclaration_1; }
		
		//'CONDITIONAL'
		public Keyword getCONDITIONALCONDITIONALKeyword_1_0() { return cCONDITIONALCONDITIONALKeyword_1_0; }
		
		//OPTIONAL
		public EnumLiteralDeclaration getOPTIONALEnumLiteralDeclaration_2() { return cOPTIONALEnumLiteralDeclaration_2; }
		
		//'OPTIONAL'
		public Keyword getOPTIONALOPTIONALKeyword_2_0() { return cOPTIONALOPTIONALKeyword_2_0; }
	}
	
	private final RequirementsModelElements pRequirementsModel;
	private final RequirementModelElementElements pRequirementModelElement;
	private final EStringElements pEString;
	private final AttributeElements pAttribute;
	private final ConstraintElements pConstraint;
	private final RequirementsGroupElements pRequirementsGroup;
	private final RequirementElements pRequirement;
	private final ExpressionElements pExpression;
	private final RequirementTypeElements eRequirementType;
	private final RequirementPriorityElements eRequirementPriority;
	private final AttributeValueElements pAttributeValue;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public ReqAdminGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pRequirementsModel = new RequirementsModelElements();
		this.pRequirementModelElement = new RequirementModelElementElements();
		this.pEString = new EStringElements();
		this.pAttribute = new AttributeElements();
		this.pConstraint = new ConstraintElements();
		this.pRequirementsGroup = new RequirementsGroupElements();
		this.pRequirement = new RequirementElements();
		this.pExpression = new ExpressionElements();
		this.eRequirementType = new RequirementTypeElements();
		this.eRequirementPriority = new RequirementPriorityElements();
		this.pAttributeValue = new AttributeValueElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("de.tubs.cs.isf.reqeditor.administration.ReqAdmin".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//RequirementsModel:
	//	{RequirementsModel}
	//	'RequirementsModel' name=EString ('author' creator=EString)? ('version' version=EString)? ('elements' '{'
	//	elements+=RequirementModelElement ("," elements+=RequirementModelElement)* '}')? ('attributes' '{'
	//	attributes+=Attribute ("," attributes+=Attribute)* '}')?;
	public RequirementsModelElements getRequirementsModelAccess() {
		return pRequirementsModel;
	}
	
	public ParserRule getRequirementsModelRule() {
		return getRequirementsModelAccess().getRule();
	}
	
	//RequirementModelElement:
	//	'Create' RequirementsGroup | 'Create' Requirement;
	public RequirementModelElementElements getRequirementModelElementAccess() {
		return pRequirementModelElement;
	}
	
	public ParserRule getRequirementModelElementRule() {
		return getRequirementModelElementAccess().getRule();
	}
	
	//EString:
	//	STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//Attribute:
	//	{Attribute}
	//	'Attribute' id=EString?;
	public AttributeElements getAttributeAccess() {
		return pAttribute;
	}
	
	public ParserRule getAttributeRule() {
		return getAttributeAccess().getRule();
	}
	
	//Constraint:
	//	{Constraint}
	//	'Constraint' name=EString 'with' ('expression' '{' expression+=Expression ("," expression+=Expression)* '}')?;
	public ConstraintElements getConstraintAccess() {
		return pConstraint;
	}
	
	public ParserRule getConstraintRule() {
		return getConstraintAccess().getRule();
	}
	
	//RequirementsGroup:
	//	{RequirementsGroup}
	//	'RequirementsGroup' name=EString 'with' ('id' id=EString)? ('description:' description=EString)? ('constraints' '{'
	//	constraints+=Constraint ("," constraints+=Constraint)* '}')? ('elements' '{' elements+=RequirementModelElement (","
	//	elements+=RequirementModelElement)* '}')?;
	public RequirementsGroupElements getRequirementsGroupAccess() {
		return pRequirementsGroup;
	}
	
	public ParserRule getRequirementsGroupRule() {
		return getRequirementsGroupAccess().getRule();
	}
	
	//Requirement:
	//	{Requirement}
	//	'Requirement' name=EString 'with'
	//	'{' ('id' id=EString)? ('description' description=EString)? ('type' type=RequirementType)? ('priority'
	//	priority=RequirementPriority)? ('constraints' '{' constraints+=Constraint ("," constraints+=Constraint)* '}')?
	//	('attributes' '{' attributes+=AttributeValue ("," attributes+=AttributeValue)* '}')?
	//	'}';
	public RequirementElements getRequirementAccess() {
		return pRequirement;
	}
	
	public ParserRule getRequirementRule() {
		return getRequirementAccess().getRule();
	}
	
	////Terminal BOOLEAN: 'true' | 'false';
	//Expression:
	//	{Expression}
	//	'create' 'Expression with'
	//	//helper function or expression to test boolean expression
	//;
	public ExpressionElements getExpressionAccess() {
		return pExpression;
	}
	
	public ParserRule getExpressionRule() {
		return getExpressionAccess().getRule();
	}
	
	//enum RequirementType:
	//	FUNCTIONAL | NON_FUNCTIONAL | NONE | OTHER;
	public RequirementTypeElements getRequirementTypeAccess() {
		return eRequirementType;
	}
	
	public EnumRule getRequirementTypeRule() {
		return getRequirementTypeAccess().getRule();
	}
	
	//enum RequirementPriority:
	//	ESSENTIAL | CONDITIONAL | OPTIONAL;
	public RequirementPriorityElements getRequirementPriorityAccess() {
		return eRequirementPriority;
	}
	
	public EnumRule getRequirementPriorityRule() {
		return getRequirementPriorityAccess().getRule();
	}
	
	//AttributeValue:
	//	{AttributeValue}
	//	'AttributeValue' ('value of' valueOf=[Attribute|EString])? ('with value' value=EString)?;
	public AttributeValueElements getAttributeValueAccess() {
		return pAttributeValue;
	}
	
	public ParserRule getAttributeValueRule() {
		return getAttributeValueAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/ *'->'* /';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
