/*
 * generated by Xtext 2.10.0
 */
package de.tubs.cs.isf.reqeditor.administration.ide.contentassist.antlr;

import com.google.inject.Inject;
import de.tubs.cs.isf.reqeditor.administration.ide.contentassist.antlr.internal.InternalReqAdminParser;
import de.tubs.cs.isf.reqeditor.administration.services.ReqAdminGrammarAccess;
import java.util.Collection;
import java.util.HashMap;
import java.util.Map;
import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

public class ReqAdminParser extends AbstractContentAssistParser {

	@Inject
	private ReqAdminGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalReqAdminParser createParser() {
		InternalReqAdminParser result = new InternalReqAdminParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getRequirementModelElementAccess().getAlternatives(), "rule__RequirementModelElement__Alternatives");
					put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
					put(grammarAccess.getRequirementTypeAccess().getAlternatives(), "rule__RequirementType__Alternatives");
					put(grammarAccess.getRequirementPriorityAccess().getAlternatives(), "rule__RequirementPriority__Alternatives");
					put(grammarAccess.getRequirementsModelAccess().getGroup(), "rule__RequirementsModel__Group__0");
					put(grammarAccess.getRequirementsModelAccess().getGroup_3(), "rule__RequirementsModel__Group_3__0");
					put(grammarAccess.getRequirementsModelAccess().getGroup_4(), "rule__RequirementsModel__Group_4__0");
					put(grammarAccess.getRequirementsModelAccess().getGroup_5(), "rule__RequirementsModel__Group_5__0");
					put(grammarAccess.getRequirementsModelAccess().getGroup_5_3(), "rule__RequirementsModel__Group_5_3__0");
					put(grammarAccess.getRequirementsModelAccess().getGroup_6(), "rule__RequirementsModel__Group_6__0");
					put(grammarAccess.getRequirementsModelAccess().getGroup_6_3(), "rule__RequirementsModel__Group_6_3__0");
					put(grammarAccess.getRequirementModelElementAccess().getGroup_0(), "rule__RequirementModelElement__Group_0__0");
					put(grammarAccess.getRequirementModelElementAccess().getGroup_1(), "rule__RequirementModelElement__Group_1__0");
					put(grammarAccess.getAttributeAccess().getGroup(), "rule__Attribute__Group__0");
					put(grammarAccess.getConstraintAccess().getGroup(), "rule__Constraint__Group__0");
					put(grammarAccess.getConstraintAccess().getGroup_4(), "rule__Constraint__Group_4__0");
					put(grammarAccess.getConstraintAccess().getGroup_4_3(), "rule__Constraint__Group_4_3__0");
					put(grammarAccess.getRequirementsGroupAccess().getGroup(), "rule__RequirementsGroup__Group__0");
					put(grammarAccess.getRequirementsGroupAccess().getGroup_4(), "rule__RequirementsGroup__Group_4__0");
					put(grammarAccess.getRequirementsGroupAccess().getGroup_5(), "rule__RequirementsGroup__Group_5__0");
					put(grammarAccess.getRequirementsGroupAccess().getGroup_6(), "rule__RequirementsGroup__Group_6__0");
					put(grammarAccess.getRequirementsGroupAccess().getGroup_6_3(), "rule__RequirementsGroup__Group_6_3__0");
					put(grammarAccess.getRequirementsGroupAccess().getGroup_7(), "rule__RequirementsGroup__Group_7__0");
					put(grammarAccess.getRequirementsGroupAccess().getGroup_7_3(), "rule__RequirementsGroup__Group_7_3__0");
					put(grammarAccess.getRequirementAccess().getGroup(), "rule__Requirement__Group__0");
					put(grammarAccess.getRequirementAccess().getGroup_5(), "rule__Requirement__Group_5__0");
					put(grammarAccess.getRequirementAccess().getGroup_6(), "rule__Requirement__Group_6__0");
					put(grammarAccess.getRequirementAccess().getGroup_7(), "rule__Requirement__Group_7__0");
					put(grammarAccess.getRequirementAccess().getGroup_8(), "rule__Requirement__Group_8__0");
					put(grammarAccess.getRequirementAccess().getGroup_9(), "rule__Requirement__Group_9__0");
					put(grammarAccess.getRequirementAccess().getGroup_9_3(), "rule__Requirement__Group_9_3__0");
					put(grammarAccess.getRequirementAccess().getGroup_10(), "rule__Requirement__Group_10__0");
					put(grammarAccess.getRequirementAccess().getGroup_10_3(), "rule__Requirement__Group_10_3__0");
					put(grammarAccess.getExpressionAccess().getGroup(), "rule__Expression__Group__0");
					put(grammarAccess.getAttributeValueAccess().getGroup(), "rule__AttributeValue__Group__0");
					put(grammarAccess.getAttributeValueAccess().getGroup_2(), "rule__AttributeValue__Group_2__0");
					put(grammarAccess.getAttributeValueAccess().getGroup_3(), "rule__AttributeValue__Group_3__0");
					put(grammarAccess.getRequirementsModelAccess().getNameAssignment_2(), "rule__RequirementsModel__NameAssignment_2");
					put(grammarAccess.getRequirementsModelAccess().getCreatorAssignment_3_1(), "rule__RequirementsModel__CreatorAssignment_3_1");
					put(grammarAccess.getRequirementsModelAccess().getVersionAssignment_4_1(), "rule__RequirementsModel__VersionAssignment_4_1");
					put(grammarAccess.getRequirementsModelAccess().getElementsAssignment_5_2(), "rule__RequirementsModel__ElementsAssignment_5_2");
					put(grammarAccess.getRequirementsModelAccess().getElementsAssignment_5_3_1(), "rule__RequirementsModel__ElementsAssignment_5_3_1");
					put(grammarAccess.getRequirementsModelAccess().getAttributesAssignment_6_2(), "rule__RequirementsModel__AttributesAssignment_6_2");
					put(grammarAccess.getRequirementsModelAccess().getAttributesAssignment_6_3_1(), "rule__RequirementsModel__AttributesAssignment_6_3_1");
					put(grammarAccess.getAttributeAccess().getIdAssignment_2(), "rule__Attribute__IdAssignment_2");
					put(grammarAccess.getConstraintAccess().getNameAssignment_2(), "rule__Constraint__NameAssignment_2");
					put(grammarAccess.getConstraintAccess().getExpressionAssignment_4_2(), "rule__Constraint__ExpressionAssignment_4_2");
					put(grammarAccess.getConstraintAccess().getExpressionAssignment_4_3_1(), "rule__Constraint__ExpressionAssignment_4_3_1");
					put(grammarAccess.getRequirementsGroupAccess().getNameAssignment_2(), "rule__RequirementsGroup__NameAssignment_2");
					put(grammarAccess.getRequirementsGroupAccess().getIdAssignment_4_1(), "rule__RequirementsGroup__IdAssignment_4_1");
					put(grammarAccess.getRequirementsGroupAccess().getDescriptionAssignment_5_1(), "rule__RequirementsGroup__DescriptionAssignment_5_1");
					put(grammarAccess.getRequirementsGroupAccess().getConstraintsAssignment_6_2(), "rule__RequirementsGroup__ConstraintsAssignment_6_2");
					put(grammarAccess.getRequirementsGroupAccess().getConstraintsAssignment_6_3_1(), "rule__RequirementsGroup__ConstraintsAssignment_6_3_1");
					put(grammarAccess.getRequirementsGroupAccess().getElementsAssignment_7_2(), "rule__RequirementsGroup__ElementsAssignment_7_2");
					put(grammarAccess.getRequirementsGroupAccess().getElementsAssignment_7_3_1(), "rule__RequirementsGroup__ElementsAssignment_7_3_1");
					put(grammarAccess.getRequirementAccess().getNameAssignment_2(), "rule__Requirement__NameAssignment_2");
					put(grammarAccess.getRequirementAccess().getIdAssignment_5_1(), "rule__Requirement__IdAssignment_5_1");
					put(grammarAccess.getRequirementAccess().getDescriptionAssignment_6_1(), "rule__Requirement__DescriptionAssignment_6_1");
					put(grammarAccess.getRequirementAccess().getTypeAssignment_7_1(), "rule__Requirement__TypeAssignment_7_1");
					put(grammarAccess.getRequirementAccess().getPriorityAssignment_8_1(), "rule__Requirement__PriorityAssignment_8_1");
					put(grammarAccess.getRequirementAccess().getConstraintsAssignment_9_2(), "rule__Requirement__ConstraintsAssignment_9_2");
					put(grammarAccess.getRequirementAccess().getConstraintsAssignment_9_3_1(), "rule__Requirement__ConstraintsAssignment_9_3_1");
					put(grammarAccess.getRequirementAccess().getAttributesAssignment_10_2(), "rule__Requirement__AttributesAssignment_10_2");
					put(grammarAccess.getRequirementAccess().getAttributesAssignment_10_3_1(), "rule__Requirement__AttributesAssignment_10_3_1");
					put(grammarAccess.getAttributeValueAccess().getValueOfAssignment_2_1(), "rule__AttributeValue__ValueOfAssignment_2_1");
					put(grammarAccess.getAttributeValueAccess().getValueAssignment_3_1(), "rule__AttributeValue__ValueAssignment_3_1");
				}
			};
		}
		return nameMappings.get(element);
	}

	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			InternalReqAdminParser typedParser = (InternalReqAdminParser) parser;
			typedParser.entryRuleRequirementsModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public ReqAdminGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(ReqAdminGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
